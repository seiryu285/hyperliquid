name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  security-tests:
    runs-on: ubuntu-latest
    services:
      mongodb:
        image: mongo:4.4
        ports:
          - 27017:27017
      redis:
        image: redis:6
        ports:
          - 6379:6379

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run unit tests with coverage
        run: |
          pytest tests/ --cov=backend --cov-report=xml

      - name: Start application for E2E tests
        run: |
          docker-compose up -d
          sleep 10  # Wait for services to start

      - name: Setup Chrome and ChromeDriver
        uses: browser-actions/setup-chrome@latest
        with:
          chrome-version: stable

      - name: Run E2E tests
        run: |
          pytest tests/e2e/ --html=test-reports/e2e-report.html

      - name: Run ZAP security scan
        uses: zaproxy/action-full-scan@v0.4.0
        with:
          target: 'http://localhost:8000'
          rules_file_name: '.zap/rules.tsv'
          cmd_options: '-a'

      - name: Run security checks
        run: |
          bandit -r backend/ -f json -o security-reports/bandit-report.json
          safety check -r requirements.txt --json > security-reports/safety-report.json

      - name: Upload test reports
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: test-reports
          path: |
            test-reports/
            security-reports/
            coverage.xml

      - name: Send notification
        if: failure()
        uses: slackapi/slack-github-action@v1.24.0
        with:
          channel-id: 'security-alerts'
          slack-message: "Security tests failed in ${{ github.repository }}"
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
